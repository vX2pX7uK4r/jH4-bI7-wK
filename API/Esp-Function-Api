local hui = gethui()
local EspFunctionList = {}
local CustomConfigurationTable = {}
local function getVisibility(configValue)
    if configValue == nil then
        return true
    else
        return configValue
    end
end

function EspFunctionList:DrawingObjects(Object, config)
    if not Object then return "对象为空" end
    local EspConfig = config or {}
    local color3 = EspConfig.Color3 or Color3.new(1, 1, 1)
    local billboardGuiAdornee = EspConfig.BillboardGuiAdornee
    local distanceColor3 = EspConfig.DistanceColor3 or Color3.new(1, 1, 1)
    local textTransparency = EspConfig.TextTransparency or 0
    local highlightTransparency = EspConfig.HighlightTransparency or 0.6
    local studsOffset = EspConfig.StudsOffset or Vector3.new(0, 0, 0)
    local studsOffsetWorldSpace = EspConfig.StudsOffsetWorldSpace or Vector3.new(0, 0, 0)
    local size = EspConfig.Size or UDim2.new(0, 100, 0, 40)
    local billboardName = EspConfig.BillboardGuiName or Object.Name
    local customName = EspConfig.CustomName or Object.Name or "nil"
    local nameVisible = getVisibility(EspConfig.NameVisible)
    local distanceVisible = getVisibility(EspConfig.DistanceVisible)
    local searchAdornee = Object
    if billboardGuiAdornee then
        if type(billboardGuiAdornee) == "string" then
            searchAdornee = Object:FindFirstChild(billboardGuiAdornee) or Object
        end
    end
    local existingBillboard = nil
    for _, child in ipairs(hui:GetChildren()) do
        if child:IsA("BillboardGui") and child.Adornee == searchAdornee then
            existingBillboard = child
            break
        end
    end
    if existingBillboard and existingBillboard:IsA("BillboardGui") then
        local nameTextLabel = existingBillboard:FindFirstChild("Name")
        local distanceTextLabel = existingBillboard:FindFirstChild("Distance")
        if nameTextLabel and nameTextLabel:IsA("TextLabel") then
            nameTextLabel.Text = customName
            nameTextLabel.TextColor3 = color3
            nameTextLabel.Visible = nameVisible
            nameTextLabel.TextTransparency = textTransparency
        end
        if distanceTextLabel and distanceTextLabel:IsA("TextLabel") then
            distanceTextLabel.TextColor3 = distanceColor3
            distanceTextLabel.Visible = distanceVisible
            distanceTextLabel.TextTransparency = textTransparency
        end
        existingBillboard.Name = billboardName
        existingBillboard.StudsOffset = studsOffset
        existingBillboard.Size = size
        existingBillboard.StudsOffsetWorldSpace = studsOffsetWorldSpace
        existingBillboard.Adornee = searchAdornee
        local existingHighlight = existingBillboard:FindFirstChildWhichIsA("Highlight")
        local highlightAdornee = EspConfig.HighlightAdornee
        if highlightAdornee then
            local targetAdornee = Object
            if type(highlightAdornee) == "string" then
                targetAdornee = Object:FindFirstChild(highlightAdornee) or Object
            end
            if existingHighlight then
                existingHighlight.FillColor = color3
                existingHighlight.FillTransparency = highlightTransparency
                existingHighlight.Adornee = targetAdornee
            else
                local highlight = Instance.new("Highlight")
                highlight.OutlineTransparency = 1
                highlight.Adornee = targetAdornee
                highlight.FillColor = color3
                highlight.FillTransparency = highlightTransparency
                highlight.Parent = existingBillboard
            end
        else
            if existingHighlight then
                existingHighlight:Destroy()
            end
        end
        return "更新绘制:" .. existingBillboard.Name
    else
        local billboardGui = Instance.new("BillboardGui")
        billboardGui.AlwaysOnTop = true
        billboardGui.Name = billboardName
        billboardGui.Size = size
        billboardGui.ClipsDescendants = true
        billboardGui.Adornee = searchAdornee
        billboardGui.MaxDistance = math.huge
        billboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        billboardGui.StudsOffsetWorldSpace = studsOffsetWorldSpace
        billboardGui.StudsOffset = studsOffset
        billboardGui.Parent = hui
        local font = Font.new("rbxasset://fonts/families/SourceSansPro.json")
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Name = "Name"
        nameLabel.TextWrapped = false
        nameLabel.TextStrokeTransparency = 0
        nameLabel.TextScaled = true
        nameLabel.FontFace = font
        nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
        nameLabel.Text = customName
        nameLabel.TextColor3 = color3
        nameLabel.BackgroundTransparency = 1
        nameLabel.TextTransparency = textTransparency
        nameLabel.Visible = nameVisible
        nameLabel.Parent = billboardGui
        local distanceLabel = Instance.new("TextLabel")
        distanceLabel.Name = "Distance"
        distanceLabel.TextWrapped = false
        distanceLabel.TextStrokeTransparency = 0.4
        distanceLabel.TextScaled = true
        distanceLabel.FontFace = font
        distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
        distanceLabel.Text = "[无数据]"
        distanceLabel.TextTransparency = textTransparency
        distanceLabel.TextColor3 = distanceColor3
        distanceLabel.BackgroundTransparency = 1
        distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
        distanceLabel.Visible = distanceVisible
        distanceLabel.Parent = billboardGui
        local highlightAdornee = EspConfig.HighlightAdornee
        if highlightAdornee then
            local targetAdornee = Object
            if type(highlightAdornee) == "string" then
                targetAdornee = Object:FindFirstChild(highlightAdornee) or Object
            end
            local highlight = Instance.new("Highlight")
            highlight.OutlineTransparency = 1
            highlight.Adornee = targetAdornee
            highlight.FillColor = color3
            highlight.FillTransparency = highlightTransparency
            highlight.Parent = billboardGui
        end
        return "创建绘制:" .. billboardGui.Name
    end
end


function EspFunctionList:DestroyDrawing(Object,Mode)
    if Object then
        if getVisibility(Mode) then
            for _, BillboardGui in ipairs(hui:GetChildren()) do
                if BillboardGui:IsA("BillboardGui") and BillboardGui.Adornee == Object then
                    BillboardGui:Destroy()
                    return "(Object)销毁绘制:"..Object.Name
                end
            end
        else
            for _, BillboardGui in ipairs(hui:GetChildren()) do
                if BillboardGui:IsA("BillboardGui") and BillboardGui.Name == Object then
                    BillboardGui:Destroy()
                    return "(Name)销毁绘制:"..Object
                end
            end
        end
    end
end

function EspFunctionList:DestroyAllDrawing()
    local count = 0
    for _, BillboardGui in ipairs(hui:GetChildren()) do
        if BillboardGui:IsA("BillboardGui") then
            BillboardGui:Destroy()
            count = count + 1
        end
    end
    return "销毁所有绘制,数量:"..count
end

function EspFunctionList:GetDrawingList(showAdornee, shouldPrint)
    local billboardGuis = {}
    local countTable = {}
    for _, child in ipairs(hui:GetChildren()) do
        if child:IsA("BillboardGui") then
            local adorneeName = child.Adornee and child.Adornee.Name or "无绑定对象"
            table.insert(billboardGuis, {
                Name = child.Name,
                Adornee = adorneeName
            })
            local key = showAdornee and adorneeName or child.Name
            countTable[key] = (countTable[key] or 0) + 1
        end
    end
    if shouldPrint then
        local statusText = ""
        for name, count in pairs(countTable) do
            if statusText ~= "" then
                statusText = statusText .. ", "
            end
            statusText = statusText .. string.format("%s(%d)", name, count)
        end
        if #billboardGuis == 0 then
            print("当前绘制数量: 0")
        else
            local displayType = showAdornee and "绑定对象(Adornee)" or "绘制名称(Name)"
            print(string.format("当前绘制数量: %d | %s状态: %s", #billboardGuis, displayType, statusText))
        end
    end
    return billboardGuis
end

function EspFunctionList:AddConfiguration(Name, config, delete)
    local success, result = pcall(function()
        if type(Name) ~= "string" then
            return "配置名称必须是字符串"
        end
        if type(CustomConfigurationTable) ~= "table" then
            CustomConfigurationTable = {}
        end
        if delete == true then
            if CustomConfigurationTable[Name] == nil then
                return "找不到名为 '"..Name.."' 的配置"
            end
            CustomConfigurationTable[Name] = nil
            return "成功删除配置 '"..Name.."'"
        end
        if type(config) ~= "table" then
            return "配置内容必须是表"
        end
        CustomConfigurationTable[Name] = config
        return "名为"..Name.."的配置添加成功\n"..game:GetService("HttpService"):JSONEncode(config)
    end)
    if success then
        return result
    else
        return "操作失败: " .. tostring(result)
    end
end

function EspFunctionList:GetConfiguration(Name)
    local success, result = pcall(function()
        if type(CustomConfigurationTable) ~= "table" then
            CustomConfigurationTable = {}
            return "配置表为空"
        end
        if Name == nil then
            return CustomConfigurationTable
        end
        if type(Name) ~= "string" then
            return "配置名称必须是字符串"
        end
        if CustomConfigurationTable[Name] == nil then
            return "找不到名为 '"..Name.."' 的配置"
        end
        return CustomConfigurationTable[Name]
    end)
    if success then
        return result
    else
        return "获取配置失败: " .. tostring(result)
    end
end

function EspFunctionList:Help()
print([[
(Beta)
===ESP 绘制系统帮助===
• DrawingObjects(Object, config) - 创建/更新ESP绘制
  参数: Object(目标对象), config(配置表)
  配置选项:
    - CustomName: 自定义显示名称
    - BillboardGuiName: 自定义BillboardGui名称
    - BillboardGuiAdornee: BillboardGui绑定对象 (字符串)(从Object中查找子对象)
    - HighlightAdornee: 高亮绑定对象 (字符串)(从Object中查找子对象)
    - StudsOffset: 偏移位置 (Vector3)
    - StudsOffsetWorldSpace: 世界偏移位置 (Vector3)
    - Size: 显示大小 (UDim2)
    - Color3: 显示颜色 (Color3)
    - DistanceColor3: 距离显示颜色 (Color3)
    - NameVisible: 名称显示 (true/false)
    - DistanceVisible: 距离显示 (true/false)
    - HighlightTransparency: 高亮透明度 (0-1)
    - TextTransparency: 文字透明度 (0-1)
======================================
• DestroyDrawing(Object, Mode) - 销毁指定ESP绘制
  参数: Object(目标对象/名称), Mode(模式 true=对象 false=名称 默认true)
  return(返回字符串): 销毁状态
====================================== 
• DestroyAllDrawing() - 销毁所有绘制
  return(返回字符串): 销毁数量
====================================== 
• GetDrawingList(showAdornee, shouldPrint) - 获取当前所有绘制列表
  参数: showAdornee(显示绑定对象名称 true/false 默认false), shouldPrint(是否打印设置 true/false 默认false)
  return(返回表): 包含所有绘制信息的表格
======================================
• AddConfiguration(Name, config, delete) - 添加/删除自定义配置
  参数: Name(配置名称), config(配置内容 表), delete(删除配置 true/false 默认false)
  return(返回字符串): 操作状态
======================================
• GetConfiguration(Name) - 获取自定义配置
  参数: Name(配置名称 可选)
  return(返回表/字符串): 配置内容/操作状态
======================================
• Help() - 显示此帮助信息
]])
end

game:GetService("RunService").Stepped:Connect(function()
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        for _, BillboardGui in ipairs(hui:GetChildren()) do
            if BillboardGui:IsA("BillboardGui") and BillboardGui.Adornee then
                local DistanceLabel = BillboardGui:FindFirstChild("Distance")
                if DistanceLabel then
                    local success, distance = pcall(function()
                        local AdorneePosition = BillboardGui.Adornee:IsA("BasePart") and BillboardGui.Adornee.Position or BillboardGui.Adornee:GetPivot().Position
                        return math.floor((AdorneePosition - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)
                    end)
                    if success then
                        DistanceLabel.Text = "["..distance.."m]"
                    else
                        DistanceLabel.Text = "[计算错误]"
                    end
                end
            end
        end
    end
end)

spawn(function()
    while task.wait(20) do
        for _, BillboardGui in ipairs(hui:GetChildren()) do
            if BillboardGui:IsA("BillboardGui") then
                if BillboardGui.Adornee and BillboardGui.Adornee.Parent then
                    local success, result = pcall(function()
                        return game.Workspace:FindFirstChild(BillboardGui.Adornee.Parent.Name, true) == nil
                    end)
                    if success and result then
                        BillboardGui:Destroy()
                    end
                else
                    BillboardGui:Destroy()
                end
            end
        end
    end
end)


print("[绘制(Beta)]Api初始化成功,使用Help()查看帮助")

return EspFunctionList


--[[
{
    CustomName = nil,
    BillboardGuiName = nil,
    BillboardGuiAdornee = nil,
    HighlightAdornee = nil,
    StudsOffset = Vector3.new(0, 3, 0),
    Size = UDim2.new(0, 100, 0, 40),
    Color3 = Color3.new(0, 1, 0),
    DistanceColor3 = Color3.new(1, 1, 0),
    NameVisible = true,
    DistanceVisible = true,
    HighlightTransparency = nil,
    TextTransparency = nil,
}
]]
