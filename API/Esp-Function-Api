local hui = gethui()
local EspFunctionList = {}

local function getVisibility(configValue)
    if configValue == nil then
        return true
    else
        return configValue
    end
end

function EspFunctionList:DrawingObjects(Object, config)
    local EspConfig = config or {}
    if Object then
        for _, BillboardGui in ipairs(hui:GetChildren()) do
            if BillboardGui:IsA("BillboardGui") and BillboardGui.Adornee == Object then
                local NameTextLabel = BillboardGui:FindFirstChild("Name")
                local DistanceTextLabel = BillboardGui:FindFirstChild("Distance")
                if NameTextLabel then
                    NameTextLabel.Text = EspConfig.CustomName or "nil"
                    NameTextLabel.TextColor3 = EspConfig.Color3 or Color3.new(1, 1, 1)
                    NameTextLabel.Visible = getVisibility(EspConfig.NameVisible)
                    NameTextLabel.TextTransparency = EspConfig.TextTransparency or 0
                end
                if DistanceTextLabel then
                    DistanceTextLabel.TextColor3 = EspConfig.DistanceColor3 or Color3.new(1,1,1)
                    DistanceTextLabel.Visible = getVisibility(EspConfig.DistanceVisible)
                    DistanceTextLabel.TextTransparency = EspConfig.TextTransparency or 0
                end

                BillboardGui.StudsOffset = EspConfig.StudsOffset or Vector3.new(0.00, 0.00, 0.00)
                BillboardGui.Size = EspConfig.Size or UDim2.new(0.00, 100.00, 0.00, 40.00)
                BillboardGui.Name = EspConfig.BillboardGuiName or Object.Name
                BillboardGui.StudsOffsetWorldSpace = EspConfig.StudsOffsetWorldSpace or Vector3.new(0.00, 0.00, 0.00)
                if EspConfig.HighlightMode or false then
                    if BillboardGui:FindFirstChildOfClass("Highlight") then
                        local Highlight = BillboardGui:FindFirstChildOfClass("Highlight")
                        Highlight.FillColor = EspConfig.Color3 or Color3.new(1, 1, 1)
                        Highlight.FillTransparency = EspConfig.HighlightTransparency or 0.6
                        Highlight.Adornee = EspConfig.HighlightAdornee or Object
                    else
                        local Highlight = Instance.new("Highlight")
                        Highlight.OutlineTransparency = 1
                        Highlight.Adornee = EspConfig.HighlightAdornee or Object
                        Highlight.FillColor = EspConfig.Color3 or Color3.new(1, 1, 1)
                        Highlight.FillTransparency = EspConfig.HighlightTransparency or 0.6
                        Highlight.Parent = BillboardGui
                    end
                else
                    local existingHighlight = BillboardGui:FindFirstChildOfClass("Highlight")
                    if existingHighlight then
                        existingHighlight:Destroy()
                    end
                end
                return "更新绘制:"..BillboardGui.Name
            end
        end

        local BillboardGui = Instance.new("BillboardGui")
        local Name = Instance.new("TextLabel")
        local Distance = Instance.new("TextLabel")
        BillboardGui.AlwaysOnTop = true
        BillboardGui.Name = EspConfig.BillboardGuiName or Object.Name
        BillboardGui.Size = EspConfig.Size or UDim2.new(0.00, 100.00, 0.00, 40.00)
        BillboardGui.ClipsDescendants = true
        BillboardGui.Adornee = Object
        BillboardGui.MaxDistance = math.huge
        BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        BillboardGui.StudsOffsetWorldSpace = EspConfig.StudsOffsetWorldSpace or Vector3.new(0.00, 0.00, 0.00)
        BillboardGui.StudsOffset = EspConfig.StudsOffset or Vector3.new(0.00, 0.00, 0.00)
        BillboardGui.Parent = hui
        Name.Name = "Name"
        Name.TextWrapped = true
        Name.TextStrokeTransparency = 0
        Name.TextScaled = true
        Name.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
        Name.Size = UDim2.new(1.00, 0.00, 0.50, 0.00)
        Name.Text = EspConfig.CustomName or Object.Name or "nil"
        Name.TextColor3 = EspConfig.Color3 or Color3.new(1, 1, 1)
        Name.BackgroundTransparency = 1
        Name.TextTransparency = EspConfig.TextTransparency or 0
        Name.Parent = BillboardGui
        Name.Visible = getVisibility(EspConfig.NameVisible)
        Distance.Name = "Distance"
        Distance.TextWrapped = true
        Distance.TextStrokeTransparency = 0.4000000059604645
        Distance.TextScaled = true
        Distance.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
        Distance.Size = UDim2.new(1.00, 0.00, 0.50, 0.00)
        Distance.Text = "[无数据]"
        Distance.TextTransparency = EspConfig.TextTransparency or 0
        Distance.TextColor3 = EspConfig.DistanceColor3 or Color3.new(1,1,1)
        Distance.BackgroundTransparency = 1
        Distance.Position = UDim2.new(0.00, 0.00, 0.50, 0.00)
        Distance.Parent = BillboardGui
        Distance.Visible = getVisibility(EspConfig.DistanceVisible)
        if EspConfig.HighlightMode or false then
            local Highlight = Instance.new("Highlight")
            Highlight.OutlineTransparency = 1
            Highlight.Adornee = EspConfig.HighlightAdornee or Object
            Highlight.FillColor = EspConfig.Color3 or Color3.new(1, 1, 1)
            Highlight.FillTransparency = EspConfig.HighlightTransparency or 0.6
            Highlight.Parent = BillboardGui
        end
        return "创建绘制:"..BillboardGui.Name
    end
end

function EspFunctionList:DestroyDrawing(BillboardGuiName)
    if BillboardGuiName then
        for _, BillboardGui in ipairs(hui:GetChildren()) do
            if BillboardGui:IsA("BillboardGui") and BillboardGui.Name == BillboardGuiName then
                BillboardGui:Destroy()
                return "销毁绘制:"..BillboardGuiName
            end
        end
    end
end

function EspFunctionList:DestroyAllDrawing()
    local count = 0
    for _, BillboardGui in ipairs(hui:GetChildren()) do
        if BillboardGui:IsA("BillboardGui") then
            BillboardGui:Destroy()
            count = count + 1
        end
    end
    return "销毁所有绘制,数量:"..count
end

function EspFunctionList:GetDrawingList(showAdornee)
    local billboardGuis = {}
    local countTable = {}
    for _, child in ipairs(hui:GetChildren()) do
        if child:IsA("BillboardGui") then
            local adorneeName = child.Adornee and child.Adornee.Name or "无绑定对象"
            table.insert(billboardGuis, {
                Name = child.Name,
                Adornee = adorneeName
            })
            local key = showAdornee and adorneeName or child.Name
            countTable[key] = (countTable[key] or 0) + 1
        end
    end
    local statusText = ""
    for name, count in pairs(countTable) do
        if statusText ~= "" then
            statusText = statusText .. ", "
        end
        statusText = statusText .. string.format("%s(%d)", name, count)
    end
    if #billboardGuis == 0 then
        print("当前绘制数量: 0")
    else
        local displayType = showAdornee and "绑定对象(Adornee)" or "绘制名称(Name)"
        print(string.format("当前绘制数量: %d | %s状态: %s", #billboardGuis, displayType, statusText))
    end
    return billboardGuis
end

function EspFunctionList:Help()
print([[
(Beta)
===ESP 绘制系统帮助===
• DrawingObjects(Object, config) - 创建/更新ESP绘制
  参数: Object(目标对象), config(配置表)
  配置选项:
    - CustomName: 自定义显示名称
    - BillboardGuiName: 自定义BillboardGui名称
    - HighlightAdornee: 自定义高亮显示对象 (Object)
    - StudsOffset: 偏移位置 (Vector3)
    - StudsOffsetWorldSpace: 世界偏移位置 (Vector3)
    - Size: 显示大小 (UDim2)
    - Color3: 显示颜色 (Color3)
    - DistanceColor3: 距离显示颜色 (Color3)
    - HighlightMode: 高亮显示 (true/false)
    - NameVisible: 名称显示 (true/false)
    - DistanceVisible: 距离显示 (true/false)
    - HighlightTransparency: 高亮透明度 (0-1)
    - TextTransparency: 文字透明度 (0-1)
======================================
• DestroyDrawing(BillboardGuiName) - 销毁指定名字的绘制
  参数: BillboardGuiName(BillboardGui名称)
====================================== 
• DestroyAllDrawing() - 销毁所有绘制
  return(返回字符串): 销毁数量
====================================== 
• GetDrawingList() - 获取当前所有绘制列表
  return(返回Tabel): 包含所有绘制名称和绑定对象名称的表
======================================
• Help() - 显示此帮助信息
]])
end

game:GetService("RunService").Stepped:Connect(function()
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        for _, BillboardGui in ipairs(hui:GetChildren()) do
            if BillboardGui:IsA("BillboardGui") and BillboardGui.Adornee then
                local DistanceLabel = BillboardGui:FindFirstChild("Distance")
                if DistanceLabel then
                    local success, distance = pcall(function()
                        local AdorneePosition = BillboardGui.Adornee:IsA("BasePart") and BillboardGui.Adornee.Position or BillboardGui.Adornee:GetPivot().Position
                        return math.floor((AdorneePosition - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)
                    end)
                    if success then
                        DistanceLabel.Text = "["..distance.."m]"
                    else
                        DistanceLabel.Text = "[计算错误]"
                    end
                end
            end
        end
    end
end)

spawn(function()
    while true do
        wait(10)
        print("清理")
        for _, BillboardGui in ipairs(hui:GetChildren()) do
            if BillboardGui:IsA("BillboardGui") then
                if BillboardGui.Adornee then
                    local success, result = pcall(function()
                        return game.Workspace:FindFirstChild(BillboardGui.Adornee.Parent.Name, true) == nil
                    end)
                    if success and result then
                        BillboardGui:Destroy()
                    end
                else
                    BillboardGui:Destroy()
                end
            end
        end
    end
end)

print("[绘制(Beta)]Api初始化成功")
print("使用Help()查看帮助")
return EspFunctionList

